@inject IJSRuntime JSRuntime
@inherits InputBase<string>
<input id="@id" @attributes="AdditionalAttributes" class="@CssClass" @bind="CurrentValueAsString" />

@code {
    [Parameter]
    public string id { get; set; }
    [Parameter]
    public string rawValue { get; set; }
    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(id))
            id = Guid.NewGuid().ToString();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var pattern = AdditionalAttributes["data-mask"].ToString();
            var isRegEx = pattern.StartsWith("/") && pattern.EndsWith("/");
            if (isRegEx)
                pattern = pattern.TrimStart('/').TrimEnd('/');
            await JSRuntime.InvokeVoidAsync("mask", id,pattern, isRegEx, DotNetObjectReference.Create(this));
        }
    }
    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }

    [JSInvokable]
    public void returnUnmaskedValue(string value)
    {
        rawValue = value;
    }
}







